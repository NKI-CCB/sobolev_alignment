Search.setIndex({
    docnames: [
        "_autosummary/sobolev_alignment",
        "conf",
        "content/modules",
        "content/sobolev_alignment",
        "index",
    ],
    filenames: [
        "_autosummary/sobolev_alignment.rst",
        "conf.rst",
        "content/modules.rst",
        "content/sobolev_alignment.rst",
        "index.rst",
    ],
    titles: [
        "sobolev_alignment",
        "conf module",
        "docs",
        "sobolev_alignment package",
        "sincei",
    ],
    terms: {
        gener: [1, 3],
        configur: 1,
        start: 1,
        your: 1,
        applic: 1,
        us: [1, 3, 4],
        py: 1,
        config: 1,
        configfil: 1,
        yml: 1,
        you: 1,
        can: [1, 3, 4],
        also: 1,
        provid: [1, 3],
        multipl: 1,
        configfile1: 1,
        configfile2: 1,
        configfile3: 1,
        when: [1, 3],
        file: [1, 3, 4],
        latter: 1,
        mai: [1, 3],
        overrid: 1,
        set: [1, 3],
        from: [1, 3, 4],
        former: 1,
        In: [1, 3],
        import: 1,
        my_set: 1,
        get: 1,
        default_set: 1,
        If: [1, 3],
        don: 1,
        t: [1, 3],
        need: [1, 3],
        default: [1, 3],
        make: 1,
        sure: 1,
        alwai: 1,
        suppli: [1, 4],
        exist: 1,
        Or: 1,
        simpli: [1, 3],
        an: [1, 3, 4],
        argumentpars: 1,
        own: 1,
        other: [1, 3],
        purpos: 1,
        must: [1, 3],
        parse_known_arg: 1,
        method: [1, 3],
        parser: 1,
        altern: 1,
        load: [1, 3],
        manual: 1,
        function: [1, 3],
        do: 1,
        thi: [1, 3],
        path: [1, 3],
        i: [1, 3, 4],
        absolut: 1,
        The: [1, 3],
        syntax: 1,
        complet: [1, 3],
        kei: [1, 3],
        none: [1, 3],
        return: [1, 3],
        valu: [1, 3],
        dictionari: [1, 3],
        els: 1,
        featur: [3, 4],
        analysi: [3, 4],
        author: 3,
        soufian: 3,
        mourragui: 3,
        contain: 3,
        all: [3, 4],
        code: 3,
        taylor: 3,
        expans: 3,
        gaussian: 3,
        matern: 3,
        kernel: 3,
        basi: 3,
        x: 3,
        k: 3,
        gamma: 3,
        comput: 3,
        singl: [3, 4],
        gene: [3, 4],
        except: 3,
        offset: 3,
        term: 3,
        paramet: 3,
        np: 3,
        arrai: 3,
        column: 3,
        vector: 3,
        each: [3, 4],
        row: 3,
        correspond: 3,
        sampl: [3, 4],
        int: 3,
        order: 3,
        float: 3,
        "mat\u00e9rn": 3,
        higher: 3,
        combinatorial_product: 3,
        idx: 3,
        data: [3, 4],
        matrix: 3,
        tupl: 3,
        combin: 3,
        e: 3,
        take: 3,
        account: 3,
        scipi: 3,
        spars: 3,
        csc_matrix: 3,
        higher_order_contribut: 3,
        d: 3,
        sample_offset: 3,
        gene_nam: 3,
        list: 3,
        n_job: 3,
        1: 3,
        return_matrix: 3,
        bool: 3,
        fals: 3,
        x_j: 3,
        exp: 3,
        xx: 3,
        linear: 3,
        panda: 3,
        datafram: 3,
        we: [3, 4],
        here: 3,
        critic: 3,
        reli: 3,
        sparsiti: 3,
        speed: 3,
        up: 3,
        current: 3,
        implement: 3,
        relev: 3,
        two: 3,
        case: 3,
        dimension: [3, 4],
        small: 3,
        high: 3,
        dens: 3,
        matric: 3,
        would: 3,
        lead: 3,
        signific: 3,
        over: 3,
        head: 3,
        without: 3,
        gain: 3,
        could: 3,
        benefit: 3,
        anoth: 3,
        strategi: 3,
        g: 3,
        2: 3,
        interact: 3,
        name: 3,
        number: 3,
        concurr: 3,
        thread: 3,
        cpu: 3,
        core: 3,
        possibl: 3,
        warn: 3,
        larg: 3,
        routin: 3,
        memori: 3,
        intens: 3,
        crash: 3,
        true: 3,
        ar: 3,
        proport: 3,
        non: 3,
        help: 3,
        process: 3,
        pd: 3,
        For: [3, 4],
        instanc: 3,
        scale: 3,
        rkh: 3,
        normalis: 3,
        factor: 3,
        multipli: 3,
        artifici: 3,
        scvi: 3,
        decod: 3,
        multivari: 3,
        nois: 3,
        train: 3,
        approxim: 3,
        vae: 3,
        encod: 3,
        machin: 3,
        generate_sampl: 3,
        sample_s: 3,
        batch_nam: 3,
        covariates_valu: 3,
        lib_siz: 3,
        dict: 3,
        model: 3,
        batch_key_dict: 3,
        return_dist: 3,
        express: 3,
        profil: 3,
        note: [3, 4],
        develop: [3, 4],
        ha: 3,
        been: 3,
        design: 3,
        tool: 3,
        class: 3,
        break: 3,
        ndarrai: 3,
        str: 3,
        indic: 3,
        batch: [3, 4],
        covariate_valu: 3,
        covari: 3,
        mean: 3,
        librari: 3,
        size: 3,
        per: [3, 4],
        which: 3,
        exploit: 3,
        link: 3,
        whether: 3,
        distribut: 3,
        torch: 3,
        tensor: 3,
        follow: 3,
        one: 3,
        parallel_generate_sampl: 3,
        option: 3,
        batch_siz: 3,
        1000: 3,
        wrapper: 3,
        parallel: 3,
        run: 3,
        sever: 3,
        b: 3,
        chang: [3, 4],
        appli: 3,
        than: 3,
        10: 3,
        3: 3,
        launch: 3,
        mani: 3,
        avail: 3,
        interpol: 3,
        compute_optimal_tau: 3,
        pv_number: 3,
        pv_project: 3,
        principal_angl: 3,
        n_interpol: 3,
        100: 3,
        optim: 3,
        step: 3,
        pv: 3,
        grassmann: 3,
        project_on_interpolate_pv: 3,
        angl: 3,
        tau_step: 3,
        project: 3,
        oper: 3,
        custom: 3,
        script: 3,
        specif: 3,
        mat_inv_sqrt: 3,
        m: 3,
        threshold: 3,
        "1e": 3,
        "06": 3,
        invers: 3,
        squar: 3,
        root: 3,
        symmetr: 3,
        svd: 3,
        ridg: 3,
        regress: 3,
        krr: 3,
        pair: 3,
        x_hat: 3,
        embed: 3,
        z_hat: 3,
        scikit: 3,
        learn: 3,
        determinist: 3,
        limit: 3,
        time: 3,
        effici: 3,
        falkon: 3,
        stochast: 3,
        "nystr\u00f6m": 3,
        faster: 3,
        both: 3,
        optimis: 3,
        multi: 3,
        gpu: 3,
        refer: 3,
        et: 3,
        al: 3,
        2022: [3, 4],
        meanti: 3,
        through: 3,
        roof: 3,
        handl: 3,
        billion: 3,
        point: 3,
        neurip: 3,
        2020: 3,
        pedregosa: 3,
        python: 3,
        journal: 3,
        research: 3,
        2011: 3,
        krrapprox: 3,
        sklearn: 3,
        rbf: 3,
        kernel_param: 3,
        penal: 3,
        maxit: 3,
        20: 3,
        falkon_opt: 3,
        mean_cent: 3,
        unit_std: 3,
        base: [3, 4],
        object: 3,
        variat: 3,
        auto: 3,
        br: 3,
        input: 3,
        execut: 3,
        subsequ: 3,
        part: 3,
        anchor: 3,
        fit: 3,
        y: 3,
        between: 3,
        call: 3,
        complianc: 3,
        self: 3,
        folder: 3,
        where: 3,
        locat: 3,
        save: 3,
        wa: 3,
        properli: 3,
        transform: 3,
        given: [3, 4],
        out: 3,
        extens: 3,
        same: 3,
        predict: 3,
        default_kernel_param: 3,
        sigma: 3,
        laplacian: 3,
        nu: 3,
        0: 3,
        5: 3,
        falkon_kernel: 3,
        sklearn_kernel: 3,
        gaussian_process: 3,
        search: 3,
        pipelin: 3,
        perform: [3, 4],
        select: 3,
        emploi: 3,
        protocol: 3,
        present: 3,
        paper: 3,
        yield: 3,
        averag: 3,
        lowest: 3,
        error: 3,
        model_alignment_pen: 3,
        x_data: 3,
        anndata: 3,
        data_sourc: 3,
        sobolev_alignment_clf: 3,
        optimal_nu: 3,
        250: 3,
        align: 3,
        itself: 3,
        measur: 3,
        princip: 3,
        intuit: 3,
        low: 3,
        dataset: 3,
        sourc: 3,
        target: 3,
        stream: 3,
        sobolevalign: 3,
        find: [3, 4],
        establish: 3,
        model_selection_nu: 3,
        A: [3, 4],
        larger: 3,
        typic: [3, 4],
        improv: 3,
        cost: 3,
        longer: 3,
        x_sourc: 3,
        x_target: 3,
        test_error_s: 3,
        spearman: 3,
        correl: 3,
        differ: [3, 4],
        highest: 3,
        consid: 3,
        act: 3,
        proxi: 3,
        valid: 3,
        variou: 3,
        hyper: 3,
        support: 3,
        naiv: 3,
        integr: 3,
        No: 3,
        approach: 3,
        multikrrapprox: 3,
        around: 3,
        serialis: 3,
        latent: 3,
        experi: 3,
        show: 3,
        doe: 3,
        ani: 3,
        advantag: 3,
        add_clf: 3,
        clf: 3,
        add: 3,
        classifi: 3,
        process_clf: 3,
        make_objective_funct: 3,
        train_data_an: 3,
        test_data_an: 3,
        batch_kei: 3,
        _scvi: 3,
        hyperopt: 3,
        hyperparamet: 3,
        evalu: 3,
        test: 3,
        sum: 3,
        result: 3,
        usabl: 3,
        model_select: 3,
        data_an: 3,
        _core: 3,
        type: 3,
        space: 3,
        dispers: 3,
        pyll: 3,
        dropout_r: 3,
        early_stop: 3,
        gene_likelihood: 3,
        lr: 3,
        n_hidden: 3,
        n_latent: 3,
        n_layer: 3,
        reduce_lr_on_plateau: 3,
        weight_decai: 3,
        max_ev: 3,
        test_siz: 3,
        divid: 3,
        bayesian: 3,
        default_hyperopt_spac: 3,
        iter: 3,
        procedur: 3,
        assess: 3,
        cell: [3, 4],
        taken: 3,
        insid: 3,
        csv: 3,
        best: 3,
        trial: 3,
        split_dataset: 3,
        split: 3,
        sobolev: 3,
        identifi: [3, 4],
        common: 3,
        line: [3, 4],
        tumor: 3,
        level: 3,
        deep: 3,
        biorxiv: 3,
        lopez: 3,
        transcriptom: 3,
        natur: 3,
        2018: 3,
        source_batch_nam: 3,
        target_batch_nam: 3,
        continuous_covariate_nam: 3,
        source_scvi_param: 3,
        target_scvi_param: 3,
        source_krr_param: 3,
        target_krr_param: 3,
        n_artificial_sampl: 3,
        100000: 3,
        n_samples_per_sample_batch: 3,
        frac_save_artifici: 3,
        save_mmap: 3,
        log_input: 3,
        n_krr_clf: 3,
        no_posterior_collaps: 3,
        frob_norm_sourc: 3,
        lib_size_norm: 3,
        main: 3,
        wrap: 3,
        synthet: 3,
        compute_consensus_featur: 3,
        x_input: 3,
        n_similar_pv: 3,
        return_anndata: 3,
        consensu: 3,
        spv: 3,
        balanc: 3,
        effect: 3,
        top: 3,
        previous: 3,
        format: 3,
        overlap: 3,
        ob: 3,
        allow: 3,
        downstream: 3,
        By: 3,
        interpolated_proj_df: 3,
        sc: 3,
        concaten: [3, 4],
        after: [3, 4],
        compute_error: 3,
        compute_random_direction_: 3,
        k_x: 3,
        k_y: 3,
        k_xy: 3,
        randomli: 3,
        cosin: 3,
        similar: 3,
        max_ord: 3,
        contribut: 3,
        weight: 3,
        associ: 3,
        technic: 3,
        orthonorm: 3,
        pass: 3,
        fit_va: 3,
        sample_artifici: 3,
        workflow: [3, 4],
        should: 3,
        potenti: 3,
        element: 3,
        pre: 3,
        scvi_model: 3,
        directli: 3,
        have: 3,
        alreadi: 3,
        re: 3,
        same_model_alignment_thresh: 3,
        9: 3,
        prior: 3,
        scvi_param: 3,
        better: 3,
        come: 3,
        price: 3,
        minimum: 3,
        dure: 3,
        themselv: 3,
        with_krr: 3,
        with_model: 3,
        null_model_similar: 3,
        n_iter: 3,
        quantil: 3,
        95: 3,
        return_al: 3,
        null: 3,
        plot_cosine_similar: 3,
        absolute_co: 3,
        plot: [3, 4],
        plot_training_metr: 3,
        metric: 3,
        sample_random_vector_: 3,
        either: 3,
        scvi_model_select: 3,
        nativ: 3,
        correct: 3,
        default_scvi_param: 3,
        plan: 3,
        bhardwaj: 4,
        v: 4,
        user: 4,
        friendli: 4,
        toolkit: 4,
        qc: 4,
        count: 4,
        cluster: 4,
        epi: 4,
        genom: 4,
        command: 4,
        python3: 4,
        conda: 4,
        creat: 4,
        new: 4,
        environ: 4,
        cd: 4,
        programs_fold: 4,
        n: 4,
        c: 4,
        bioconda: 4,
        forg: 4,
        scanpi: 4,
        deeptool: 4,
        activ: 4,
        pip: 4,
        edit: 4,
        git: 4,
        http: 4,
        github: 4,
        com: 4,
        vivekbhr: 4,
        master: 4,
        egg: 4,
        kind: 4,
        question: 4,
        suggest: 4,
        enhanc: 4,
        report: 4,
        bug: 4,
        pleas: 4,
        issu: 4,
        our: 4,
        repositori: 4,
        under: 4,
        some: 4,
        might: 4,
        incomplet: 4,
        untest: 4,
        remov: 4,
        move: 4,
        toward: 4,
        stabl: 4,
        version: 4,
        wip: 4,
        work: 4,
        progress: 4,
        yet: 4,
        descript: 4,
        scfilterbarcod: 4,
        filter: 4,
        barcod: 4,
        bam: 4,
        droplet: 4,
        seq: 4,
        scfilterstat: 4,
        produc: 4,
        statist: 4,
        read: 4,
        defin: 4,
        criteria: 4,
        sccountread: 4,
        bin: 4,
        sccountqc: 4,
        qualiti: 4,
        control: 4,
        output: 4,
        sccombinecount: 4,
        merg: 4,
        modal: 4,
        scclustercel: 4,
        reduct: 4,
        scbulkcoverag: 4,
        pseudo: 4,
        bulk: 4,
        coverag: 4,
        group: 4,
        map: 4,
        scfindmark: 4,
        marker: 4,
        scfeatureplot: 4,
        umap: 4,
        igv: 4,
        style: 4,
        track: 4,
    },
    objects: {
        "": [
            [1, 0, 0, "-", "conf"],
            [3, 0, 0, "-", "sobolev_alignment"],
        ],
        conf: [[1, 1, 1, "", "get"]],
        sobolev_alignment: [
            [3, 0, 0, "-", "feature_analysis"],
            [3, 0, 0, "-", "generate_artificial_sample"],
            [3, 0, 0, "-", "interpolated_features"],
            [3, 0, 0, "-", "kernel_operations"],
            [3, 0, 0, "-", "krr_approx"],
            [3, 0, 0, "-", "krr_model_selection"],
            [3, 0, 0, "-", "multi_krr_approx"],
            [3, 0, 0, "-", "scvi_model_search"],
            [3, 0, 0, "-", "sobolev_alignment"],
        ],
        "sobolev_alignment.feature_analysis": [
            [3, 1, 1, "", "basis"],
            [3, 1, 1, "", "combinatorial_product"],
            [3, 1, 1, "", "higher_order_contribution"],
        ],
        "sobolev_alignment.generate_artificial_sample": [
            [3, 1, 1, "", "generate_samples"],
            [3, 1, 1, "", "parallel_generate_samples"],
        ],
        "sobolev_alignment.interpolated_features": [
            [3, 1, 1, "", "compute_optimal_tau"],
            [3, 1, 1, "", "project_on_interpolate_PV"],
        ],
        "sobolev_alignment.kernel_operations": [[3, 1, 1, "", "mat_inv_sqrt"]],
        "sobolev_alignment.krr_approx": [[3, 2, 1, "", "KRRApprox"]],
        "sobolev_alignment.krr_approx.KRRApprox": [
            [3, 3, 1, "", "anchors"],
            [3, 4, 1, "", "default_kernel_params"],
            [3, 4, 1, "", "falkon_kernel"],
            [3, 3, 1, "", "fit"],
            [3, 3, 1, "", "load"],
            [3, 3, 1, "", "save"],
            [3, 4, 1, "", "sklearn_kernel"],
            [3, 3, 1, "", "transform"],
        ],
        "sobolev_alignment.krr_model_selection": [
            [3, 1, 1, "", "model_alignment_penalization"],
            [3, 1, 1, "", "model_selection_nu"],
        ],
        "sobolev_alignment.multi_krr_approx": [[3, 2, 1, "", "MultiKRRApprox"]],
        "sobolev_alignment.multi_krr_approx.MultiKRRApprox": [
            [3, 3, 1, "", "add_clf"],
            [3, 3, 1, "", "anchors"],
            [3, 3, 1, "", "predict"],
            [3, 3, 1, "", "process_clfs"],
            [3, 3, 1, "", "transform"],
        ],
        "sobolev_alignment.scvi_model_search": [
            [3, 1, 1, "", "make_objective_function"],
            [3, 1, 1, "", "model_selection"],
            [3, 1, 1, "", "split_dataset"],
        ],
        "sobolev_alignment.sobolev_alignment": [
            [3, 2, 1, "", "SobolevAlignment"],
        ],
        "sobolev_alignment.sobolev_alignment.SobolevAlignment": [
            [3, 3, 1, "", "compute_consensus_features"],
            [3, 3, 1, "", "compute_error"],
            [3, 3, 1, "", "compute_random_direction_"],
            [3, 4, 1, "", "default_scvi_params"],
            [3, 3, 1, "", "feature_analysis"],
            [3, 3, 1, "", "fit"],
            [3, 3, 1, "", "krr_model_selection"],
            [3, 3, 1, "", "load"],
            [3, 3, 1, "", "null_model_similarity"],
            [3, 3, 1, "", "plot_cosine_similarity"],
            [3, 3, 1, "", "plot_training_metrics"],
            [3, 3, 1, "", "sample_random_vector_"],
            [3, 3, 1, "", "save"],
            [3, 3, 1, "", "scvi_model_selection"],
        ],
    },
    objtypes: {
        0: "py:module",
        1: "py:function",
        2: "py:class",
        3: "py:method",
        4: "py:attribute",
    },
    objnames: {
        0: ["py", "module", "Python module"],
        1: ["py", "function", "Python function"],
        2: ["py", "class", "Python class"],
        3: ["py", "method", "Python method"],
        4: ["py", "attribute", "Python attribute"],
    },
    titleterms: {
        sobolev_align: [0, 3],
        conf: 1,
        modul: [1, 3],
        doc: 2,
        packag: 3,
        submodul: 3,
        data_normalis: 3,
        feature_analysi: 3,
        generate_artificial_sampl: 3,
        interpolated_featur: 3,
        kernel_oper: 3,
        krr_approx: 3,
        krr_model_select: 3,
        multi_krr_approx: 3,
        scvi_model_search: 3,
        content: [3, 4],
        sincei: 4,
        instal: 4,
        get: 4,
        help: 4,
        The: 4,
        list: 4,
        tool: 4,
        avail: 4,
    },
    envversion: {
        "sphinx.domains.c": 2,
        "sphinx.domains.changeset": 1,
        "sphinx.domains.citation": 1,
        "sphinx.domains.cpp": 8,
        "sphinx.domains.index": 1,
        "sphinx.domains.javascript": 2,
        "sphinx.domains.math": 2,
        "sphinx.domains.python": 3,
        "sphinx.domains.rst": 2,
        "sphinx.domains.std": 2,
        "sphinx.ext.intersphinx": 1,
        "sphinxcontrib.bibtex": 9,
        sphinx: 57,
    },
    alltitles: {
        sobolev_alignment: [[0, "module-sobolev_alignment"]],
        "conf module": [[1, "module-conf"]],
        docs: [[2, "docs"]],
        "sobolev_alignment package": [[3, "sobolev-alignment-package"]],
        Submodules: [[3, "submodules"]],
        "sobolev_alignment.data_normalisation module": [
            [3, "sobolev-alignment-data-normalisation-module"],
        ],
        "sobolev_alignment.feature_analysis module": [
            [3, "module-sobolev_alignment.feature_analysis"],
        ],
        "sobolev_alignment.generate_artificial_sample module": [
            [3, "module-sobolev_alignment.generate_artificial_sample"],
        ],
        "sobolev_alignment.interpolated_features module": [
            [3, "module-sobolev_alignment.interpolated_features"],
        ],
        "sobolev_alignment.kernel_operations module": [
            [3, "module-sobolev_alignment.kernel_operations"],
        ],
        "sobolev_alignment.krr_approx module": [
            [3, "module-sobolev_alignment.krr_approx"],
        ],
        "sobolev_alignment.krr_model_selection module": [
            [3, "module-sobolev_alignment.krr_model_selection"],
        ],
        "sobolev_alignment.multi_krr_approx module": [
            [3, "module-sobolev_alignment.multi_krr_approx"],
        ],
        "sobolev_alignment.scvi_model_search module": [
            [3, "module-sobolev_alignment.scvi_model_search"],
        ],
        "sobolev_alignment.sobolev_alignment module": [
            [3, "module-sobolev_alignment.sobolev_alignment"],
        ],
        "Module contents": [[3, "module-sobolev_alignment"]],
        sincei: [[4, "sincei"]],
        Installation: [[4, "installation"]],
        "Getting Help": [[4, "getting-help"]],
        "The list of tools available in sincei": [
            [4, "the-list-of-tools-available-in-sincei"],
        ],
        "Contents:": [[4, "contents"]],
    },
    indexentries: {
        module: [
            [0, "module-sobolev_alignment"],
            [1, "module-conf"],
            [3, "module-sobolev_alignment"],
            [3, "module-sobolev_alignment.feature_analysis"],
            [3, "module-sobolev_alignment.generate_artificial_sample"],
            [3, "module-sobolev_alignment.interpolated_features"],
            [3, "module-sobolev_alignment.kernel_operations"],
            [3, "module-sobolev_alignment.krr_approx"],
            [3, "module-sobolev_alignment.krr_model_selection"],
            [3, "module-sobolev_alignment.multi_krr_approx"],
            [3, "module-sobolev_alignment.scvi_model_search"],
            [3, "module-sobolev_alignment.sobolev_alignment"],
        ],
        sobolev_alignment: [
            [0, "module-sobolev_alignment"],
            [3, "module-sobolev_alignment"],
        ],
        conf: [[1, "module-conf"]],
        "get() (in module conf)": [[1, "conf.get"]],
        "krrapprox (class in sobolev_alignment.krr_approx)": [
            [3, "sobolev_alignment.krr_approx.KRRApprox"],
        ],
        "multikrrapprox (class in sobolev_alignment.multi_krr_approx)": [
            [3, "sobolev_alignment.multi_krr_approx.MultiKRRApprox"],
        ],
        "sobolevalignment (class in sobolev_alignment.sobolev_alignment)": [
            [3, "sobolev_alignment.sobolev_alignment.SobolevAlignment"],
        ],
        "add_clf() (sobolev_alignment.multi_krr_approx.multikrrapprox method)":
            [[3, "sobolev_alignment.multi_krr_approx.MultiKRRApprox.add_clf"]],
        "anchors() (sobolev_alignment.krr_approx.krrapprox method)": [
            [3, "sobolev_alignment.krr_approx.KRRApprox.anchors"],
        ],
        "anchors() (sobolev_alignment.multi_krr_approx.multikrrapprox method)":
            [[3, "sobolev_alignment.multi_krr_approx.MultiKRRApprox.anchors"]],
        "basis() (in module sobolev_alignment.feature_analysis)": [
            [3, "sobolev_alignment.feature_analysis.basis"],
        ],
        "combinatorial_product() (in module sobolev_alignment.feature_analysis)":
            [[3, "sobolev_alignment.feature_analysis.combinatorial_product"]],
        "compute_consensus_features() (sobolev_alignment.sobolev_alignment.sobolevalignment method)":
            [
                [
                    3,
                    "sobolev_alignment.sobolev_alignment.SobolevAlignment.compute_consensus_features",
                ],
            ],
        "compute_error() (sobolev_alignment.sobolev_alignment.sobolevalignment method)":
            [
                [
                    3,
                    "sobolev_alignment.sobolev_alignment.SobolevAlignment.compute_error",
                ],
            ],
        "compute_optimal_tau() (in module sobolev_alignment.interpolated_features)":
            [
                [
                    3,
                    "sobolev_alignment.interpolated_features.compute_optimal_tau",
                ],
            ],
        "compute_random_direction_() (sobolev_alignment.sobolev_alignment.sobolevalignment method)":
            [
                [
                    3,
                    "sobolev_alignment.sobolev_alignment.SobolevAlignment.compute_random_direction_",
                ],
            ],
        "default_kernel_params (sobolev_alignment.krr_approx.krrapprox attribute)":
            [
                [
                    3,
                    "sobolev_alignment.krr_approx.KRRApprox.default_kernel_params",
                ],
            ],
        "default_scvi_params (sobolev_alignment.sobolev_alignment.sobolevalignment attribute)":
            [
                [
                    3,
                    "sobolev_alignment.sobolev_alignment.SobolevAlignment.default_scvi_params",
                ],
            ],
        "falkon_kernel (sobolev_alignment.krr_approx.krrapprox attribute)": [
            [3, "sobolev_alignment.krr_approx.KRRApprox.falkon_kernel"],
        ],
        "feature_analysis() (sobolev_alignment.sobolev_alignment.sobolevalignment method)":
            [
                [
                    3,
                    "sobolev_alignment.sobolev_alignment.SobolevAlignment.feature_analysis",
                ],
            ],
        "fit() (sobolev_alignment.krr_approx.krrapprox method)": [
            [3, "sobolev_alignment.krr_approx.KRRApprox.fit"],
        ],
        "fit() (sobolev_alignment.sobolev_alignment.sobolevalignment method)": [
            [3, "sobolev_alignment.sobolev_alignment.SobolevAlignment.fit"],
        ],
        "generate_samples() (in module sobolev_alignment.generate_artificial_sample)":
            [
                [
                    3,
                    "sobolev_alignment.generate_artificial_sample.generate_samples",
                ],
            ],
        "higher_order_contribution() (in module sobolev_alignment.feature_analysis)":
            [
                [
                    3,
                    "sobolev_alignment.feature_analysis.higher_order_contribution",
                ],
            ],
        "krr_model_selection() (sobolev_alignment.sobolev_alignment.sobolevalignment method)":
            [
                [
                    3,
                    "sobolev_alignment.sobolev_alignment.SobolevAlignment.krr_model_selection",
                ],
            ],
        "load() (sobolev_alignment.krr_approx.krrapprox method)": [
            [3, "sobolev_alignment.krr_approx.KRRApprox.load"],
        ],
        "load() (sobolev_alignment.sobolev_alignment.sobolevalignment method)":
            [[3, "sobolev_alignment.sobolev_alignment.SobolevAlignment.load"]],
        "make_objective_function() (in module sobolev_alignment.scvi_model_search)":
            [
                [
                    3,
                    "sobolev_alignment.scvi_model_search.make_objective_function",
                ],
            ],
        "mat_inv_sqrt() (in module sobolev_alignment.kernel_operations)": [
            [3, "sobolev_alignment.kernel_operations.mat_inv_sqrt"],
        ],
        "model_alignment_penalization() (in module sobolev_alignment.krr_model_selection)":
            [
                [
                    3,
                    "sobolev_alignment.krr_model_selection.model_alignment_penalization",
                ],
            ],
        "model_selection() (in module sobolev_alignment.scvi_model_search)": [
            [3, "sobolev_alignment.scvi_model_search.model_selection"],
        ],
        "model_selection_nu() (in module sobolev_alignment.krr_model_selection)":
            [[3, "sobolev_alignment.krr_model_selection.model_selection_nu"]],
        "null_model_similarity() (sobolev_alignment.sobolev_alignment.sobolevalignment method)":
            [
                [
                    3,
                    "sobolev_alignment.sobolev_alignment.SobolevAlignment.null_model_similarity",
                ],
            ],
        "parallel_generate_samples() (in module sobolev_alignment.generate_artificial_sample)":
            [
                [
                    3,
                    "sobolev_alignment.generate_artificial_sample.parallel_generate_samples",
                ],
            ],
        "plot_cosine_similarity() (sobolev_alignment.sobolev_alignment.sobolevalignment method)":
            [
                [
                    3,
                    "sobolev_alignment.sobolev_alignment.SobolevAlignment.plot_cosine_similarity",
                ],
            ],
        "plot_training_metrics() (sobolev_alignment.sobolev_alignment.sobolevalignment method)":
            [
                [
                    3,
                    "sobolev_alignment.sobolev_alignment.SobolevAlignment.plot_training_metrics",
                ],
            ],
        "predict() (sobolev_alignment.multi_krr_approx.multikrrapprox method)":
            [[3, "sobolev_alignment.multi_krr_approx.MultiKRRApprox.predict"]],
        "process_clfs() (sobolev_alignment.multi_krr_approx.multikrrapprox method)":
            [
                [
                    3,
                    "sobolev_alignment.multi_krr_approx.MultiKRRApprox.process_clfs",
                ],
            ],
        "project_on_interpolate_pv() (in module sobolev_alignment.interpolated_features)":
            [
                [
                    3,
                    "sobolev_alignment.interpolated_features.project_on_interpolate_PV",
                ],
            ],
        "sample_random_vector_() (sobolev_alignment.sobolev_alignment.sobolevalignment method)":
            [
                [
                    3,
                    "sobolev_alignment.sobolev_alignment.SobolevAlignment.sample_random_vector_",
                ],
            ],
        "save() (sobolev_alignment.krr_approx.krrapprox method)": [
            [3, "sobolev_alignment.krr_approx.KRRApprox.save"],
        ],
        "save() (sobolev_alignment.sobolev_alignment.sobolevalignment method)":
            [[3, "sobolev_alignment.sobolev_alignment.SobolevAlignment.save"]],
        "scvi_model_selection() (sobolev_alignment.sobolev_alignment.sobolevalignment method)":
            [
                [
                    3,
                    "sobolev_alignment.sobolev_alignment.SobolevAlignment.scvi_model_selection",
                ],
            ],
        "sklearn_kernel (sobolev_alignment.krr_approx.krrapprox attribute)": [
            [3, "sobolev_alignment.krr_approx.KRRApprox.sklearn_kernel"],
        ],
        "sobolev_alignment.feature_analysis": [
            [3, "module-sobolev_alignment.feature_analysis"],
        ],
        "sobolev_alignment.generate_artificial_sample": [
            [3, "module-sobolev_alignment.generate_artificial_sample"],
        ],
        "sobolev_alignment.interpolated_features": [
            [3, "module-sobolev_alignment.interpolated_features"],
        ],
        "sobolev_alignment.kernel_operations": [
            [3, "module-sobolev_alignment.kernel_operations"],
        ],
        "sobolev_alignment.krr_approx": [
            [3, "module-sobolev_alignment.krr_approx"],
        ],
        "sobolev_alignment.krr_model_selection": [
            [3, "module-sobolev_alignment.krr_model_selection"],
        ],
        "sobolev_alignment.multi_krr_approx": [
            [3, "module-sobolev_alignment.multi_krr_approx"],
        ],
        "sobolev_alignment.scvi_model_search": [
            [3, "module-sobolev_alignment.scvi_model_search"],
        ],
        "sobolev_alignment.sobolev_alignment": [
            [3, "module-sobolev_alignment.sobolev_alignment"],
        ],
        "split_dataset() (in module sobolev_alignment.scvi_model_search)": [
            [3, "sobolev_alignment.scvi_model_search.split_dataset"],
        ],
        "transform() (sobolev_alignment.krr_approx.krrapprox method)": [
            [3, "sobolev_alignment.krr_approx.KRRApprox.transform"],
        ],
        "transform() (sobolev_alignment.multi_krr_approx.multikrrapprox method)":
            [
                [
                    3,
                    "sobolev_alignment.multi_krr_approx.MultiKRRApprox.transform",
                ],
            ],
    },
});
