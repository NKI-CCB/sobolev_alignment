Search.setIndex({
    docnames: [
        "_autosummary/sobolev_alignment",
        "content/modules",
        "content/sobolev_alignment",
        "index",
    ],
    filenames: [
        "_autosummary/sobolev_alignment.rst",
        "content/modules.rst",
        "content/sobolev_alignment.rst",
        "index.rst",
    ],
    titles: [
        "sobolev_alignment",
        "sobolev_alignment",
        "sobolev_alignment package",
        "Sobolev Alignment: aligning deep general models with large-scale kernel machines",
    ],
    terms: {
        gener: 2,
        configur: [],
        start: [],
        your: [],
        applic: [],
        us: [2, 3],
        py: [],
        config: [],
        configfil: [],
        yml: [],
        you: [],
        can: 2,
        also: [],
        provid: 2,
        multipl: [],
        configfile1: [],
        configfile2: [],
        configfile3: [],
        when: 2,
        file: 2,
        latter: [],
        mai: 2,
        overrid: [],
        set: 2,
        from: 2,
        former: [],
        In: 2,
        import: [],
        my_set: [],
        get: [],
        default_set: [],
        If: 2,
        don: [],
        t: 2,
        need: 2,
        default: 2,
        make: [],
        sure: [],
        alwai: [],
        suppli: [],
        exist: [],
        Or: [],
        simpli: 2,
        an: 2,
        argumentpars: [],
        own: [],
        other: 2,
        purpos: [],
        must: 2,
        parse_known_arg: [],
        method: 2,
        parser: [],
        altern: [],
        load: 2,
        manual: [],
        function: 2,
        do: [],
        thi: [2, 3],
        path: 2,
        i: 2,
        absolut: [],
        The: 2,
        syntax: [],
        complet: 2,
        kei: 2,
        none: 2,
        return: 2,
        valu: 2,
        dictionari: 2,
        els: [],
        setup: [],
        modul: 3,
        packag: 3,
        submodul: 3,
        sobolevalign: 3,
        compute_consensus_featur: [],
        compute_error: [],
        compute_random_direction_: [],
        feature_analysi: 3,
        fit: 2,
        krr_model_select: 3,
        null_model_similar: [],
        plot_cosine_similar: [],
        plot_training_metr: [],
        sample_random_vector_: [],
        save: 2,
        scvi_model_select: [],
        default_scvi_param: [],
        basi: [2, 3],
        combinatorial_product: [2, 3],
        higher_order_contribut: [2, 3],
        generate_artificial_sampl: 3,
        generate_sampl: [2, 3],
        parallel_generate_sampl: [2, 3],
        interpolated_featur: 3,
        compute_optimal_tau: [2, 3],
        project_on_interpolate_pv: [2, 3],
        kernel_oper: 3,
        mat_inv_sqrt: [2, 3],
        krr_approx: 3,
        krrapprox: [2, 3],
        anchor: 2,
        transform: 2,
        default_kernel_param: 2,
        falkon_kernel: 2,
        sklearn_kernel: 2,
        model_alignment_pen: [2, 3],
        model_selection_nu: [2, 3],
        multi_krr_approx: 3,
        multikrrapprox: [2, 3],
        add_clf: 2,
        predict: 2,
        process_clf: 2,
        scvi_model_search: 3,
        make_objective_funct: [2, 3],
        model_select: [2, 3],
        split_dataset: [2, 3],
        content: [],
        sobolev: 2,
        align: 2,
        author: 2,
        soufian: 2,
        mourragui: 2,
        refer: 2,
        et: 2,
        al: 2,
        identifi: 3,
        common: 3,
        between: [2, 3],
        cell: [2, 3],
        line: 3,
        tumor: 3,
        singl: [2, 3],
        level: 3,
        deep: [],
        model: 2,
        biorxiv: [],
        2022: 2,
        lopez: [],
        transcriptom: [],
        natur: [],
        2018: [],
        meanti: 2,
        kernel: 2,
        through: 2,
        roof: 2,
        handl: 2,
        billion: 2,
        point: 2,
        effici: 2,
        neurip: 2,
        2020: 2,
        class: 2,
        source_batch_nam: [],
        option: 2,
        str: 2,
        target_batch_nam: [],
        continuous_covariate_nam: [],
        list: 2,
        source_scvi_param: [],
        dict: 2,
        target_scvi_param: [],
        source_krr_param: [],
        target_krr_param: [],
        n_artificial_sampl: [],
        int: 2,
        100000: [],
        n_samples_per_sample_batch: [],
        frac_save_artifici: [],
        float: 2,
        0: 2,
        1: 2,
        save_mmap: [],
        log_input: [],
        bool: 2,
        true: 2,
        n_krr_clf: [],
        no_posterior_collaps: [],
        mean_cent: 2,
        fals: 2,
        unit_std: 2,
        frob_norm_sourc: [],
        lib_size_norm: [],
        n_job: 2,
        base: 2,
        object: 2,
        implement: 2,
        main: 2,
        which: 2,
        wrap: 2,
        all: 2,
        differ: 2,
        oper: 2,
        present: 2,
        procedur: 2,
        select: 2,
        scvi: [2, 3],
        krr: 2,
        train: 2,
        synthet: 2,
        approxim: [2, 3],
        x_input: [],
        n_similar_pv: [],
        return_anndata: [],
        project: 2,
        data: 2,
        interpol: 2,
        consensu: [],
        featur: 2,
        e: 2,
        linear: 2,
        combin: 2,
        sourc: 2,
        target: 2,
        spv: [],
        best: 2,
        balanc: [],
        effect: [],
        paramet: 2,
        anndata: 2,
        two: 2,
        ar: [2, 3],
        number: 2,
        top: [],
        whether: 2,
        time: 2,
        comput: 2,
        previous: [],
        error: 2,
        format: [],
        overlap: [],
        indic: 2,
        ob: [],
        allow: 3,
        downstream: [],
        analysi: 2,
        By: [],
        datafram: 2,
        interpolated_proj_df: [],
        pd: 2,
        sc: [],
        concaten: [],
        sampl: 2,
        after: [],
        size: 2,
        input: 2,
        vae: [2, 3],
        k_x: [],
        k_y: [],
        k_xy: [],
        randomli: [],
        vector: 2,
        cosin: [],
        similar: [],
        max_ord: [],
        gene_nam: 2,
        launch: 2,
        gene: 2,
        contribut: [],
        weight: [],
        associ: [],
        latent: [2, 3],
        factor: 2,
        technic: [],
        given: 2,
        machin: 2,
        orthonorm: [],
        gaussian: 2,
        space: 2,
        order: 2,
        correspond: 2,
        interact: 2,
        term: 2,
        name: 2,
        pass: [],
        b: 2,
        warn: 2,
        same: 2,
        x_sourc: 2,
        x_target: 2,
        fit_va: [],
        sample_artifici: [],
        run: 2,
        workflow: [],
        g: 2,
        dataset: 2,
        should: [],
        potenti: [],
        batch: 2,
        part: 2,
        element: [],
        pre: [],
        avail: 2,
        scvi_model: [],
        would: 2,
        directli: [],
        perform: 2,
        case: 2,
        artifici: 2,
        have: [],
        alreadi: [],
        been: 2,
        without: 2,
        re: [],
        self: 2,
        instanc: 2,
        m: 2,
        1000: 2,
        same_model_alignment_thresh: [],
        9: [],
        hyper: 2,
        routin: 2,
        bayesian: 2,
        optimis: 2,
        call: 2,
        prior: [],
        scvi_param: [],
        larger: 2,
        lead: 2,
        better: [],
        come: [],
        price: [],
        higher: 2,
        memori: 2,
        minimum: [],
        princip: 2,
        angl: 2,
        dure: [],
        themselv: [],
        with_krr: [],
        with_model: [],
        folder: 2,
        where: 2,
        locat: 2,
        n_iter: [],
        100: 2,
        quantil: [],
        95: [],
        return_al: [],
        null: [],
        pv: 2,
        absolute_co: [],
        plot: [],
        metric: [],
        data_sourc: 2,
        k: 2,
        either: [],
        _core: 2,
        type: 2,
        _scvi: 2,
        dispers: 2,
        hyperopt: 2,
        pyll: 2,
        appli: 2,
        dropout_r: 2,
        early_stop: 2,
        gene_likelihood: 2,
        lr: 2,
        n_hidden: 2,
        n_latent: 2,
        n_layer: 2,
        reduce_lr_on_plateau: 2,
        weight_decai: 2,
        max_ev: 2,
        test_siz: 2,
        hyperparamet: 2,
        nativ: [],
        correct: [],
        tool: 2,
        default_hyperopt_spac: 2,
        iter: 2,
        assess: 2,
        proport: 2,
        taken: 2,
        insid: 2,
        test: 2,
        plan: [],
        contain: 2,
        code: 2,
        taylor: 2,
        expans: 2,
        matern: 2,
        x: 2,
        gamma: 2,
        except: 2,
        offset: 2,
        np: 2,
        arrai: 2,
        column: 2,
        each: 2,
        row: 2,
        "mat\u00e9rn": 2,
        idx: 2,
        matrix: 2,
        tupl: 2,
        take: 2,
        account: 2,
        scipi: 2,
        spars: 2,
        csc_matrix: 2,
        d: 2,
        sample_offset: 2,
        return_matrix: 2,
        x_j: 2,
        exp: 2,
        xx: 2,
        panda: 2,
        we: 2,
        here: 2,
        critic: 2,
        reli: 2,
        sparsiti: 2,
        speed: 2,
        up: 2,
        current: 2,
        relev: 2,
        dimension: 2,
        small: 2,
        high: 2,
        dens: 2,
        matric: 2,
        signific: 2,
        over: 2,
        head: 2,
        gain: 2,
        could: 2,
        benefit: 2,
        anoth: 2,
        strategi: 2,
        2: 2,
        concurr: 2,
        thread: 2,
        cpu: 2,
        core: 2,
        possibl: 2,
        larg: 2,
        intens: 2,
        crash: 2,
        non: 2,
        help: 2,
        process: 2,
        For: 2,
        scale: 2,
        rkh: 2,
        normalis: 2,
        multipli: 2,
        decod: 2,
        multivari: 2,
        nois: 2,
        encod: 2,
        sample_s: 2,
        batch_nam: 2,
        covariates_valu: 2,
        lib_siz: 2,
        batch_key_dict: 2,
        return_dist: 2,
        express: 2,
        profil: 2,
        note: 2,
        develop: 2,
        ha: 2,
        design: 2,
        break: 2,
        ndarrai: 2,
        covariate_valu: 2,
        covari: 2,
        mean: [2, 3],
        librari: 2,
        per: 2,
        exploit: 2,
        link: 2,
        distribut: 2,
        torch: 2,
        tensor: 2,
        follow: 2,
        one: 2,
        batch_siz: 2,
        wrapper: 2,
        parallel: 2,
        sever: 2,
        chang: 2,
        than: 2,
        10: 2,
        3: 2,
        mani: 2,
        pv_number: 2,
        pv_project: 2,
        principal_angl: 2,
        n_interpol: 2,
        optim: 2,
        step: 2,
        grassmann: 2,
        tau_step: 2,
        custom: 2,
        script: 2,
        specif: 2,
        threshold: 2,
        "1e": 2,
        "06": 2,
        invers: 2,
        squar: 2,
        root: 2,
        symmetr: 2,
        svd: 2,
        ridg: 2,
        regress: 2,
        pair: 2,
        x_hat: 2,
        embed: 2,
        z_hat: 2,
        scikit: 2,
        learn: 2,
        determinist: 2,
        limit: 2,
        falkon: 2,
        stochast: 2,
        "nystr\u00f6m": 2,
        faster: 2,
        both: 2,
        multi: 2,
        gpu: 2,
        pedregosa: 2,
        python: 2,
        journal: 2,
        research: 2,
        2011: 2,
        sklearn: 2,
        rbf: 2,
        kernel_param: 2,
        penal: 2,
        maxit: 2,
        20: 2,
        falkon_opt: 2,
        variat: 2,
        auto: 2,
        br: 2,
        execut: 2,
        subsequ: 2,
        y: 2,
        complianc: 2,
        wa: 2,
        properli: 2,
        out: 2,
        extens: 2,
        sigma: 2,
        laplacian: 2,
        nu: 2,
        5: 2,
        gaussian_process: 2,
        search: [2, 3],
        pipelin: 2,
        emploi: 2,
        protocol: 2,
        paper: 2,
        yield: 2,
        averag: 2,
        lowest: 2,
        x_data: 2,
        sobolev_alignment_clf: 2,
        optimal_nu: 2,
        250: 2,
        itself: 2,
        measur: 2,
        intuit: 2,
        low: 2,
        stream: 2,
        find: 2,
        establish: 2,
        A: 2,
        typic: 2,
        improv: 2,
        cost: 2,
        longer: 2,
        test_error_s: 2,
        spearman: 2,
        correl: 2,
        highest: 2,
        consid: 2,
        act: 2,
        proxi: 2,
        valid: 2,
        variou: 2,
        support: 2,
        naiv: 2,
        integr: 2,
        No: 2,
        approach: 2,
        around: 2,
        serialis: 2,
        experi: 2,
        show: 2,
        doe: 2,
        ani: 2,
        advantag: 2,
        clf: 2,
        add: 2,
        classifi: 2,
        train_data_an: 2,
        test_data_an: 2,
        batch_kei: 2,
        evalu: 2,
        sum: 2,
        result: 2,
        usabl: 2,
        data_an: 2,
        divid: 2,
        csv: 2,
        trial: 2,
        split: 2,
        backbon: 3,
        variabl: 3,
        falkonml: 3,
        systemat: 3,
        appro: 3,
        sobolev_align: 3,
        index: 3,
        page: 3,
    },
    objects: {
        "": [[2, 0, 0, "-", "sobolev_alignment"]],
        sobolev_alignment: [
            [2, 0, 0, "-", "SobolevAlignment"],
            [2, 0, 0, "-", "feature_analysis"],
            [2, 0, 0, "-", "generate_artificial_sample"],
            [2, 0, 0, "-", "interpolated_features"],
            [2, 0, 0, "-", "kernel_operations"],
            [2, 0, 0, "-", "krr_approx"],
            [2, 0, 0, "-", "krr_model_selection"],
            [2, 0, 0, "-", "multi_krr_approx"],
            [2, 0, 0, "-", "scvi_model_search"],
        ],
        "sobolev_alignment.feature_analysis": [
            [2, 1, 1, "", "basis"],
            [2, 1, 1, "", "combinatorial_product"],
            [2, 1, 1, "", "higher_order_contribution"],
        ],
        "sobolev_alignment.generate_artificial_sample": [
            [2, 1, 1, "", "generate_samples"],
            [2, 1, 1, "", "parallel_generate_samples"],
        ],
        "sobolev_alignment.interpolated_features": [
            [2, 1, 1, "", "compute_optimal_tau"],
            [2, 1, 1, "", "project_on_interpolate_PV"],
        ],
        "sobolev_alignment.kernel_operations": [[2, 1, 1, "", "mat_inv_sqrt"]],
        "sobolev_alignment.krr_approx": [[2, 2, 1, "", "KRRApprox"]],
        "sobolev_alignment.krr_approx.KRRApprox": [
            [2, 3, 1, "", "anchors"],
            [2, 4, 1, "", "default_kernel_params"],
            [2, 4, 1, "", "falkon_kernel"],
            [2, 3, 1, "", "fit"],
            [2, 3, 1, "", "load"],
            [2, 3, 1, "", "save"],
            [2, 4, 1, "", "sklearn_kernel"],
            [2, 3, 1, "", "transform"],
        ],
        "sobolev_alignment.krr_model_selection": [
            [2, 1, 1, "", "model_alignment_penalization"],
            [2, 1, 1, "", "model_selection_nu"],
        ],
        "sobolev_alignment.multi_krr_approx": [[2, 2, 1, "", "MultiKRRApprox"]],
        "sobolev_alignment.multi_krr_approx.MultiKRRApprox": [
            [2, 3, 1, "", "add_clf"],
            [2, 3, 1, "", "anchors"],
            [2, 3, 1, "", "predict"],
            [2, 3, 1, "", "process_clfs"],
            [2, 3, 1, "", "transform"],
        ],
        "sobolev_alignment.scvi_model_search": [
            [2, 1, 1, "", "make_objective_function"],
            [2, 1, 1, "", "model_selection"],
            [2, 1, 1, "", "split_dataset"],
        ],
    },
    objtypes: {
        0: "py:module",
        1: "py:function",
        2: "py:class",
        3: "py:method",
        4: "py:attribute",
    },
    objnames: {
        0: ["py", "module", "Python module"],
        1: ["py", "function", "Python function"],
        2: ["py", "class", "Python class"],
        3: ["py", "method", "Python method"],
        4: ["py", "attribute", "Python attribute"],
    },
    titleterms: {
        sobolev_align: [0, 1, 2],
        conf: [],
        modul: 2,
        setup: [],
        packag: 2,
        submodul: 2,
        sobolevalign: 2,
        feature_analysi: 2,
        generate_artificial_sampl: 2,
        interpolated_featur: 2,
        kernel_oper: 2,
        krr_approx: 2,
        krr_model_select: 2,
        multi_krr_approx: 2,
        scvi_model_search: 2,
        content: [2, 3],
        sobolev: 3,
        align: 3,
        deep: 3,
        gener: 3,
        model: 3,
        larg: 3,
        scale: 3,
        kernel: 3,
        machin: 3,
        indic: 3,
        tabl: 3,
    },
    envversion: {
        "sphinx.domains.c": 2,
        "sphinx.domains.changeset": 1,
        "sphinx.domains.citation": 1,
        "sphinx.domains.cpp": 8,
        "sphinx.domains.index": 1,
        "sphinx.domains.javascript": 2,
        "sphinx.domains.math": 2,
        "sphinx.domains.python": 3,
        "sphinx.domains.rst": 2,
        "sphinx.domains.std": 2,
        "sphinx.ext.intersphinx": 1,
        "sphinxcontrib.bibtex": 9,
        sphinx: 57,
    },
    alltitles: {
        sobolev_alignment: [
            [0, "module-sobolev_alignment"],
            [1, "sobolev-alignment"],
        ],
        "Sobolev Alignment: aligning deep general models with large-scale kernel machines":
            [
                [
                    3,
                    "sobolev-alignment-aligning-deep-general-models-with-large-scale-kernel-machines",
                ],
            ],
        "Contents:": [[3, null]],
        "Indices and tables": [[3, "indices-and-tables"]],
        "sobolev_alignment package": [[2, "sobolev-alignment-package"]],
        Submodules: [[2, "submodules"]],
        "sobolev_alignment.SobolevAlignment module": [
            [2, "module-sobolev_alignment.SobolevAlignment"],
        ],
        "sobolev_alignment.feature_analysis module": [
            [2, "module-sobolev_alignment.feature_analysis"],
        ],
        "sobolev_alignment.generate_artificial_sample module": [
            [2, "module-sobolev_alignment.generate_artificial_sample"],
        ],
        "sobolev_alignment.interpolated_features module": [
            [2, "module-sobolev_alignment.interpolated_features"],
        ],
        "sobolev_alignment.kernel_operations module": [
            [2, "module-sobolev_alignment.kernel_operations"],
        ],
        "sobolev_alignment.krr_approx module": [
            [2, "module-sobolev_alignment.krr_approx"],
        ],
        "sobolev_alignment.krr_model_selection module": [
            [2, "module-sobolev_alignment.krr_model_selection"],
        ],
        "sobolev_alignment.multi_krr_approx module": [
            [2, "module-sobolev_alignment.multi_krr_approx"],
        ],
        "sobolev_alignment.scvi_model_search module": [
            [2, "module-sobolev_alignment.scvi_model_search"],
        ],
        "Module contents": [[2, "module-sobolev_alignment"]],
    },
    indexentries: {
        "krrapprox (class in sobolev_alignment.krr_approx)": [
            [2, "sobolev_alignment.krr_approx.KRRApprox"],
        ],
        "multikrrapprox (class in sobolev_alignment.multi_krr_approx)": [
            [2, "sobolev_alignment.multi_krr_approx.MultiKRRApprox"],
        ],
        "add_clf() (sobolev_alignment.multi_krr_approx.multikrrapprox method)":
            [[2, "sobolev_alignment.multi_krr_approx.MultiKRRApprox.add_clf"]],
        "anchors() (sobolev_alignment.krr_approx.krrapprox method)": [
            [2, "sobolev_alignment.krr_approx.KRRApprox.anchors"],
        ],
        "anchors() (sobolev_alignment.multi_krr_approx.multikrrapprox method)":
            [[2, "sobolev_alignment.multi_krr_approx.MultiKRRApprox.anchors"]],
        "basis() (in module sobolev_alignment.feature_analysis)": [
            [2, "sobolev_alignment.feature_analysis.basis"],
        ],
        "combinatorial_product() (in module sobolev_alignment.feature_analysis)":
            [[2, "sobolev_alignment.feature_analysis.combinatorial_product"]],
        "compute_optimal_tau() (in module sobolev_alignment.interpolated_features)":
            [
                [
                    2,
                    "sobolev_alignment.interpolated_features.compute_optimal_tau",
                ],
            ],
        "default_kernel_params (sobolev_alignment.krr_approx.krrapprox attribute)":
            [
                [
                    2,
                    "sobolev_alignment.krr_approx.KRRApprox.default_kernel_params",
                ],
            ],
        "falkon_kernel (sobolev_alignment.krr_approx.krrapprox attribute)": [
            [2, "sobolev_alignment.krr_approx.KRRApprox.falkon_kernel"],
        ],
        "fit() (sobolev_alignment.krr_approx.krrapprox method)": [
            [2, "sobolev_alignment.krr_approx.KRRApprox.fit"],
        ],
        "generate_samples() (in module sobolev_alignment.generate_artificial_sample)":
            [
                [
                    2,
                    "sobolev_alignment.generate_artificial_sample.generate_samples",
                ],
            ],
        "higher_order_contribution() (in module sobolev_alignment.feature_analysis)":
            [
                [
                    2,
                    "sobolev_alignment.feature_analysis.higher_order_contribution",
                ],
            ],
        "load() (sobolev_alignment.krr_approx.krrapprox method)": [
            [2, "sobolev_alignment.krr_approx.KRRApprox.load"],
        ],
        "make_objective_function() (in module sobolev_alignment.scvi_model_search)":
            [
                [
                    2,
                    "sobolev_alignment.scvi_model_search.make_objective_function",
                ],
            ],
        "mat_inv_sqrt() (in module sobolev_alignment.kernel_operations)": [
            [2, "sobolev_alignment.kernel_operations.mat_inv_sqrt"],
        ],
        "model_alignment_penalization() (in module sobolev_alignment.krr_model_selection)":
            [
                [
                    2,
                    "sobolev_alignment.krr_model_selection.model_alignment_penalization",
                ],
            ],
        "model_selection() (in module sobolev_alignment.scvi_model_search)": [
            [2, "sobolev_alignment.scvi_model_search.model_selection"],
        ],
        "model_selection_nu() (in module sobolev_alignment.krr_model_selection)":
            [[2, "sobolev_alignment.krr_model_selection.model_selection_nu"]],
        module: [
            [2, "module-sobolev_alignment"],
            [2, "module-sobolev_alignment.SobolevAlignment"],
            [2, "module-sobolev_alignment.feature_analysis"],
            [2, "module-sobolev_alignment.generate_artificial_sample"],
            [2, "module-sobolev_alignment.interpolated_features"],
            [2, "module-sobolev_alignment.kernel_operations"],
            [2, "module-sobolev_alignment.krr_approx"],
            [2, "module-sobolev_alignment.krr_model_selection"],
            [2, "module-sobolev_alignment.multi_krr_approx"],
            [2, "module-sobolev_alignment.scvi_model_search"],
        ],
        "parallel_generate_samples() (in module sobolev_alignment.generate_artificial_sample)":
            [
                [
                    2,
                    "sobolev_alignment.generate_artificial_sample.parallel_generate_samples",
                ],
            ],
        "predict() (sobolev_alignment.multi_krr_approx.multikrrapprox method)":
            [[2, "sobolev_alignment.multi_krr_approx.MultiKRRApprox.predict"]],
        "process_clfs() (sobolev_alignment.multi_krr_approx.multikrrapprox method)":
            [
                [
                    2,
                    "sobolev_alignment.multi_krr_approx.MultiKRRApprox.process_clfs",
                ],
            ],
        "project_on_interpolate_pv() (in module sobolev_alignment.interpolated_features)":
            [
                [
                    2,
                    "sobolev_alignment.interpolated_features.project_on_interpolate_PV",
                ],
            ],
        "save() (sobolev_alignment.krr_approx.krrapprox method)": [
            [2, "sobolev_alignment.krr_approx.KRRApprox.save"],
        ],
        "sklearn_kernel (sobolev_alignment.krr_approx.krrapprox attribute)": [
            [2, "sobolev_alignment.krr_approx.KRRApprox.sklearn_kernel"],
        ],
        sobolev_alignment: [[2, "module-sobolev_alignment"]],
        "sobolev_alignment.sobolevalignment": [
            [2, "module-sobolev_alignment.SobolevAlignment"],
        ],
        "sobolev_alignment.feature_analysis": [
            [2, "module-sobolev_alignment.feature_analysis"],
        ],
        "sobolev_alignment.generate_artificial_sample": [
            [2, "module-sobolev_alignment.generate_artificial_sample"],
        ],
        "sobolev_alignment.interpolated_features": [
            [2, "module-sobolev_alignment.interpolated_features"],
        ],
        "sobolev_alignment.kernel_operations": [
            [2, "module-sobolev_alignment.kernel_operations"],
        ],
        "sobolev_alignment.krr_approx": [
            [2, "module-sobolev_alignment.krr_approx"],
        ],
        "sobolev_alignment.krr_model_selection": [
            [2, "module-sobolev_alignment.krr_model_selection"],
        ],
        "sobolev_alignment.multi_krr_approx": [
            [2, "module-sobolev_alignment.multi_krr_approx"],
        ],
        "sobolev_alignment.scvi_model_search": [
            [2, "module-sobolev_alignment.scvi_model_search"],
        ],
        "split_dataset() (in module sobolev_alignment.scvi_model_search)": [
            [2, "sobolev_alignment.scvi_model_search.split_dataset"],
        ],
        "transform() (sobolev_alignment.krr_approx.krrapprox method)": [
            [2, "sobolev_alignment.krr_approx.KRRApprox.transform"],
        ],
        "transform() (sobolev_alignment.multi_krr_approx.multikrrapprox method)":
            [
                [
                    2,
                    "sobolev_alignment.multi_krr_approx.MultiKRRApprox.transform",
                ],
            ],
    },
});
